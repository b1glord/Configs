#============================
#0)Temeller
#============================
#ip adres: local ip

#Username:  root
#Password:  password



#putty kullanmak gerekiyor
#kodlari kopyalamak daha kolay
#winscp ile de baglanarak dosyalari gorebilirsin



#firewall i kapatiyoruz (opsiyonel)
#============================
#systemctl stop firewalld.service
#systemctl disable firewalld.service



#Nano ve wget i kuruyoruz (opsiyonel)
#============================
#yum install nano wget -y



#se linux u kapatiyoruz (opsiyonel)
#============================
#setenforce 0 



#Ip kontrolu icin Net-tools kuruyoruz (Opsiyonel)
#============================
#yum -y install net-tools
#ifconfig



#install Development tools (Opsiyonel)
#============================
#yum groupinstall "Development Tools"    (yum repoda biraz daha eski versiyon var(gcc+4.8) ama bize gcc+7 gerekli)



#1) ispconfig Kurulumu
#============================
cd /tmp; sudo yum install -y wget unzip net-tools; wget -O installer.tgz "https://github.com/b1glord/ispconfig_setup/tarball/master"; tar zxvf installer.tgz; cd *ispconfig*; sudo bash install.sh



#2) install gcc-c++ versiyon 7
#( rAthena derlemek icin gcc 7 versiyon yuklemek gerekiyor bu versiyonu fedora deposundan yukeleyelim )
#============================
sudo yum install -y centos-release-scl
sudo yum install -y devtoolset-7-gcc devtoolset-7-gcc-c++
#derleme icin her defasinda asagidaki kodu giriyoruz 
source scl_source enable devtoolset-7

#yada derleme icin her defasinda devamli yazmak istemiyorsan ./bashrc profile dosyasina ekliyoruz
cat <<'EOF' >> /etc/profile.d/gcc.sh
source scl_source enable devtoolset-7
EOF


#3)Installing Compiler and Git Support
#Type the following command (this will install Make, PCRE header files, and Zlib header files)
#MariaDB-shared paketinde libmysqlclient.so dosyası mevcut
#============================
yum install -y make pcre-devel zlib-devel ntp mariadb-devel MariaDB-shared

# install new git ius repo
wget https://raw.githubusercontent.com/b1glord/ispconfig_setup_extra/master/centos7/git/install_github.sh
chmod a+x ./install_github.sh & ./install_github.sh

#4-1)importing your costumized rathena git into server
#https://github.com/rathena/rathena/wiki/installations#optional-clone-information
#git clone https://github.com/rathena/rathena.git ~/rAthena    // outdated
#============================

git clone https://github.com/b1glord/rathena.git ~/rAthena

cd ~/rAthena
git remote -v

git remote add upstream https://github.com/rathena/rathena.git

git remote -v
git pull upstream master




#5) Db Yukleme sihirbazi
#ADI isimli dosyayi rAthena/sql-files dizinine kopyaliyoruz
#============================

cd ~/rAthena/sql-files
rm -f ~/rAthena/sql-files/ADI.sh
rm -f ~/rAthena/sql-files/custom.sql
rm -f ~/rAthena/sql-files/customaccount.sql

wget https://raw.githubusercontent.com/b1glord/ADI/master/customaccount.sql
wget https://raw.githubusercontent.com/b1glord/ADI/master/custom.sql
wget https://raw.githubusercontent.com/b1glord/ADI/master/ADI.sh
chmod +x ADI.sh
./ADI.sh




#5-2) Web Service 
#============================
git clone https://github.com/secretdataz/athena-web-service.git ~/web_athena

php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');"
HASH="$(wget -q -O - https://composer.github.io/installer.sig)"
php -r "if (hash_file('SHA384', 'composer-setup.php') === '$HASH') { echo 'Installer verified'; } else { echo 'Installer corrupt'; unlink('composer-setup.php'); } echo PHP_EOL;"
php composer-setup.php --install-dir=/usr/local/bin --filename=composer
composer

cd ~/web_athena
composer install

Winscp den .env.example dosyası düzenlemesi yapmak için ctrl+alt+h kombinasyonunu kullanarak gizli dosyalar(. ile başlayan)ı görüyoruz




#6)Configuring Client Packet Version (Opsiyonel)
#============================
#Move /rAthena/src/config
#Open packets.hpp and see lastest PACKETVER
#/// In Linux: The same as above or run the following command: ./configure --enable-packetver=YYYYMMDD




#============================
#7) Kurulum öncesi config ayarları (Opsiyonel)
#============================
wget https://raw.githubusercontent.com/b1glord/Configs/master/ragnarok/rathenaconfig.sh





#============================
#8.1) Alternatif Derleme icin asagidaki komutlari giriyoruz (mariadb-devel yuklemek gerekebilir) (Opsiyonel)
#============================
#ln -s /usr/lib64/libmysqlclient.so.18.0.0 /usr/lib64/libmysqlclient.so
#./configure --enable-64bit --with-MYSQL_LIBS=/usr/lib64/libmysqlclient.so
#yada
#./configure --enable-64bit --with-mysql-lib64	


#8.2) return and compile the server
#============================

cd
cd rAthena
make clean
chmod a+x ./configure
./configure --enable-64bit --enable-packetver=20211103 --with-MYSQL_LIBS=/usr/lib64/libmysqlclient.so
make server




#9) How to Recompile (optional only change or update /src)
#In the future (after you update or edit any file in /src) to recompile, add make clean before make sql:
#============================

#cd trunk
#./configure 
#make clean 
#make server




#10)Start your server
#============================
#rAthena sunucuyu çalıştırmadan önce port açmalıyız ilgili portlar (6121-6900)
cd ~/rAthena
chmod a+x athena-start

#To Start
./athena-start start

#To Stop
#./athena-start stop

#To Restart
#./athena-start restart



